<apex:page standardStylesheets="false"
    sidebar="false"
    showHeader="false"
    id="visualForceServices"
    controller="sfdcAppRemoter" 
    extensions="RegistrationFormLeadRemoter,RegistrationFormShippingRemoter,JobController,ConventionController,EventController,EventContentRestController,EventSponsorData,ExamManagementRemoter,PolicyController,SurveyRegistrationController,TagManagerController,ExamRegistrationFormRemoter,CertRegistrationFormRemoter,GARP_MS_Membership,GARP_MS_Courses"
>
    <script type="text/javascript">
    
    var sfdcService = {
        currentAccount: null
    };

    Visualforce.remoting.timeout = 120000;
    
    // GARP_MS_Membership
    sfdcService.GetMembershipRegistrationInfo = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Membership.GetMembershipRegistrationInfo}',
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.VerifyExistingMembershipCustomer = function(email, firstName, lastName, cta, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Membership.VerifyExistingMembershipCustomer}',
            email, firstName, lastName, cta,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
    
    // GARP_MS_Courses
  
    
    sfdcService.GetFFRRegistrationInfo = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Courses.GetFFRRegistrationInfo}',
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.VerifyExistingFFRCustomer = function(email, firstName, lastName, cta, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Courses.VerifyExistingFFRCustomer}',
            email, firstName, lastName, cta,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.GetFRRRegistrationInfo = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Courses.GetFRRRegistrationInfo}',
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
  
    sfdcService.VerifyExistingFRRCustomer = function(email, firstName, lastName, cta, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Courses.VerifyExistingFRRCustomer}',
            email, firstName, lastName, cta,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
    

    sfdcService.VerifyExistingFFRCustomer = function(email, firstName, lastName, cta, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GARP_MS_Courses.VerifyExistingFFRCustomer}',
            email, firstName, lastName, cta,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }

    // Common
    
    sfdcService.getSessionId= function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getSessionId}',
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }  


    // Universal Registration Form Remote Methods
    sfdcService.fetchShippingOptions = function(countryCode, postalCode, productIds, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RegistrationFormShippingRemoter.fetchShippingOptions}',
            countryCode, postalCode, productIds,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }

    sfdcService.validateAddress = function(jsonString, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RegistrationFormShippingRemoter.validateAddress}',
            jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.upsertLead = function(lead, formKey, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.RegistrationFormLeadRemoter.upsertLead}',
            lead, formKey,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }
    // END Universal Registration Form Remote Methods

    // Certification (SCR) Registration Remote Actions
    sfdcService.fetchCertRegistrationFormData = function(registrationType, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.CertRegistrationFormRemoter.fetchCertRegistrationFormData}',
            registrationType,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.fetchCertRegistrationInfoFormData = function(registrationType, contactId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.CertRegistrationFormRemoter.fetchCertRegistrationInfoFormData}',
            registrationType, contactId,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.fetchCertRegistrationCompletedFormData = function(registrationType, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.CertRegistrationFormRemoter.fetchCertRegistrationCompletedFormData}',
            registrationType, 
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    } 

    sfdcService.createCertRegistrationOrder = function(registrationType, jsonString, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.CertRegistrationFormRemoter.createCertRegistrationOrder}',
            registrationType, jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    } 

    sfdcService.payCertRegistrationOrder = function(registrationType, jsonString, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.CertRegistrationFormRemoter.payCertRegistrationOrder}',
            registrationType, jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null); 
            }, 
            {escape: true}
        );            
    }

    sfdcService.updateCertRegistrationInfo = function(registrationType, jsonString, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.CertRegistrationFormRemoter.updateCertRegistrationInfo}',
            registrationType, jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }
    // END Certification (SCR) Registration Remote Actions
    
    // Exam (FRM, ERP) Registration Remote Actions
    sfdcService.fetchExamRegistrationFormData = function(registrationType, teamRegistrationCode, callback){ 
        
        if(typeof teamRegistrationCode == 'function') {
            callback = teamRegistrationCode;
            teamRegistrationCode = null;
        }
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamRegistrationFormRemoter.fetchExamRegistrationFormData}',
            registrationType,teamRegistrationCode,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.fetchExamRegistrationInfoData = function(registrationType, contactId, callback){             
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamRegistrationFormRemoter.fetchExamRegistrationInfoData}',
            registrationType, contactId,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.fetchExamRegistrationCompletedData = function(registrationType, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamRegistrationFormRemoter.fetchExamRegistrationCompletedData}',
            registrationType,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.createExamRegistrationOrder = function(registrationType, jsonString, callback){
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamRegistrationFormRemoter.createExamRegistrationOrder}',
            registrationType, jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }

    sfdcService.payExamRegistrationOrder = function(registrationType, jsonString, callback){        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamRegistrationFormRemoter.payExamRegistrationOrder}',
            registrationType, jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            },  
            {escape: true}
        );            
    }

    sfdcService.updateExamRegistrationInfoData = function(registrationType, jsonString, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamRegistrationFormRemoter.updateExamRegistrationInfoData}',
            registrationType, jsonString,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);   
            }, 
            {escape: true}
        );            
    }
    // END Exam (FRM, ERP) Registration Remote Actions


    sfdcService.createON24EngagementHubRegistration= function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createON24EngagementHubRegistration}',
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }
    

    sfdcService.eppOptIn= function(contactID, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.eppOptIn}',
            contactID,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }

    sfdcService.submitRequiredOstaInformation = function(contact, opportunityId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.submitRequiredOstaInformation}',
            contact, opportunityId,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }

    sfdcService.submitErrata = function(category, studyMaterial, message, book, solution, pageNumber, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.submitErrata}',
            category, studyMaterial, message, book, solution, pageNumber,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }

    sfdcService.getTagManagerData = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.TagManagerController.getTagManagerData}',
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }

    sfdcService.getSurvey = function(surveyId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.SurveyRegistrationController.getSurvey}',
            surveyId,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }
        
    sfdcService.createSurveyParticipants = function(surveyId, surveyParticipants, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.SurveyRegistrationController.createSurveyParticipants}',
            surveyId, surveyParticipants,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }
    
    sfdcService.getPolicies = function(recordId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.PolicyController.get}',
            recordId,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );          
    }
    
    sfdcService.payOpportunity = function(opportunityId, cardMonth, cardYear, cardSecurity, cardNumber, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.payOpportunity}',
            opportunityId, cardMonth, cardYear, cardSecurity, cardNumber,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }  
    
    sfdcService.getOpportunity = function(opportunityId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getOpportunity}',
            opportunityId,
            function(result, event){
                if(event.status) callback(null, { result: result, event: event });    
                else callback(event.message, null);              
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getBulkOrders = function(bulkOrderCode, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getBulkOrders}',
            bulkOrderCode,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.verifyBulkOrder = function(tempAccount, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.verifyBulkOrder}',
            tempAccount,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.confirmProfileInformation = function(contactId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.confirmProfileInformation}',
            contactId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.fetchDailyOrders= function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchDailyOrders}',
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.updateCampaignStatus = function(contactID, campaignName, status, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.updateCampaignStatus}',
            contactID, campaignName, status,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getExamRescheduleInformation= function(examGroupId, program, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.getExamRescheduleInformation}',
            examGroupId,program,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.getExamRescheduleFees = function(examGroupId, program, selectedAdminPartI, selectedAdminPartII, selectedSitePartI, selectedSitePartII, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.getExamRescheduleFees}',
            examGroupId, program, selectedAdminPartI, selectedAdminPartII, selectedSitePartI, selectedSitePartII,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.createExamRescheduleFeesOrder = function(examGroupId, program, selectedAdminPartI, selectedAdminPartII, selectedSitePartI, selectedSitePartII, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.createExamRescheduleFeesOrder}',
            examGroupId, program, selectedAdminPartI, selectedAdminPartII, selectedSitePartI, selectedSitePartII,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.getAllProgramInfo = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.getAllProgramInfo}',
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getProgramInfo = function(programType, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.getProgramInfo}',
            programType,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.createCBTIntegrationAuthorization= function(examRegId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.createCBTIntegrationAuthorization}',
            examRegId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }    

    sfdcService.processExamRegModsFromClient = function(examRegModId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.processExamRegModsFromClient}',
            examRegModId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }    
    
    sfdcService.fetchAllEventContent = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.EventContentRestController.doGet}', 
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        ); 
    }
    
    sfdcService.fetchFeaturedEventContent = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.EventContentRestController.fetchFeaturedEventContent}', 
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        ); 
    }
    
    sfdcService.getAggregatedEvents = function(callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.EventContentRestController.getEventContents}', 
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        ); 
    }
    
    sfdcService.ssoMobuisEBook = function(productId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.ssoMobuisEBook}', 
            productId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );                    
    }
    
    
    sfdcService.getCommunitiesConsent = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getCommunitiesConsent}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    sfdcService.getChinaFeeSites = function(callback) {    
       Visualforce.remoting.Manager.invokeAction(
           '{!$RemoteAction.sfdcAppRemoter.getChinaFeeSites}',
           function(result, event){
               var returnObj = {
                   result: result,
                   event: event
               }
               callback(null, returnObj);
               return returnObj;                
           }, 
           {escape: true}
       );            
   }
   
   sfdcService.persistCommunitiesConsent = function(callback) {    
       Visualforce.remoting.Manager.invokeAction(
           '{!$RemoteAction.sfdcAppRemoter.persistCommunitiesConsent}',
           function(result, event){
               var returnObj = {
                   result: result,
                   event: event
               }
               callback(null, returnObj);
               return returnObj;                
           }, 
           {escape: true}
       );            
   }
    
    sfdcService.updateChapterMeetingRegistrationStatus = function(chapterMeetingRegistrationId, status, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.EventController.updateChapterMeetingRegistrationStatus}', 
            chapterMeetingRegistrationId, status,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );                    
    }
    
    sfdcService.getEventsByContactId = function(contactId, callback){
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.EventController.getEventsByContactId}', 
            contactId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );                    
    }
  
    sfdcService.getEventRegistrationByEventRegistrationId = function(eventRegistrationId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.getEventRegistrationByEventRegistrationId}', 
            eventRegistrationId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.updateEventRegistrationDietaryRestrictions = function(eventRegistration, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.updateEventRegistrationDietaryRestrictions}', 
            eventRegistration,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
 
    sfdcService.updateEventRegistrationProfessionalDesignations = function(eventRegistration, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.updateEventRegistrationProfessionalDesignations}', 
            eventRegistration,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.updateEventRegistrationSpecialRequirements = function(eventRegistration, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.updateEventRegistrationSpecialRequirements}', 
            eventRegistration,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.updateEventRegistrationEmergencyContact = function(eventRegistration, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.updateEventRegistrationEmergencyContact}', 
            eventRegistration,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.updateEventRegistration = function(eventRegistration, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.updateEventRegistration}', 
            eventRegistration,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.updateEventRegistrationPersonalInformation = function(eventRegistration, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.updateEventRegistrationPersonalInformation}', 
            eventRegistration,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
 
    sfdcService.getDietaryRestrictionTypesMetadata = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.getDietaryRestrictionTypesMetadata}', 
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getProfessionalDesignationsMetadata = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.getProfessionalDesignationsMetadata}', 
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.addEventSessionRegistrationByContact = function(contactId, eventId, sessionId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.addEventSessionRegistrationByContact}', 
            contactId, eventId, sessionId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }

    sfdcService.insertDeleteEventSessionRegistration = function(eventRegistrationId, eventSessionId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.insertDeleteEventSessionRegistration}', 
            eventRegistrationId, eventSessionId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.insertDeleteEventSessionRegistrations = function(eventRegistrationId, toInsert, toDelete, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.insertDeleteEventSessionRegistrations}', 
            eventRegistrationId, toInsert, toDelete,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getRegistrationsByContactIdAndEventId = function(contactId, eventId, callback) {  
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ConventionController.getRegistrationsByContactIdAndEventId}', 
            contactId, eventId, 
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getAllEventInformation = function(eventId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getAllEventInformation}',
            eventId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getEventInformation = function(eventId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getEventInformation}',
            eventId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getOpportunityByContactId = function(contactId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getOpportunityByContactId}',
            contactId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
        
   sfdcService.getCurrentConventionInformation = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getCurrentConventionInformation}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
   
    sfdcService.getPortalAds = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getPortalAds}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
   sfdcService.getWebcastInformation = function(webcastId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getWebcastInformation}',
            webcastId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.isUserAnAlumni = function(email, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.isUserAnAlumni}',
            email,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
   
   
    
    sfdcService.getSObjectFieldsWithMetadata = function(sObjectName, fields, predicate, operator, parameter, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getSObjectFieldsWithMetadata}',
            sObjectName, fields, predicate, operator, parameter,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: false}
        );            
    }
    
   
    sfdcService.getOneWireLocations = function(location, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getOneWireLocations}',
            JSON.stringify(location),
            function(result, event){
                var returnObj = {
                    result: JSON.parse(result),
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: false}
        );            
    }
    
    sfdcService.updateUserEmail= function(emailAddress, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.updateUserEmail}',
            emailAddress,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }        
    
    sfdcService.getExamResults= function(examAttemptID, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getExamResults}',
            examAttemptID,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }        
    
    
    sfdcService.getHighlightedJobs = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.JobController.getHighlightedJobs}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }       
    
    sfdcService.getJobs= function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getJobs}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    
    
    sfdcService.getGroupEvents= function(groupId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getGroupEvents}',
            groupId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    
    
    
    sfdcService.removeUserPhoto= function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.removeUserPhoto}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    
    
    
    sfdcService.setUserPhoto= function(attachmentId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setUserPhoto}',
            attachmentId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    
    

    sfdcService.getNotes= function(objectId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getNotes}',
            objectId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    

    
    sfdcService.setNote= function(objectId, title, body, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setNote}',
            objectId, title, body,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.uploadAttachment = function(fileText, fileName, positionIndex, attachmentId, callback) {
        
        var maxStringSize = 6000000;    //Maximum String size is 6,000,000 characters
        var maxFileSize = 4350000;      //After Base64 Encoding, this is the max file size
        var chunkSize = 950000;         //Maximum Javascript Remoting message size is 1,000,000 characters
        var fileSize = fileText.length;
        var chunck = null;
        var attachmentBody = null;
        var doneUploading = false;
        
        if(fileSize <= positionIndex + chunkSize) {
            attachmentBody = fileText.substring(positionIndex);
            doneUploading = true;
        } else {
            attachmentBody = fileText.substring(positionIndex, positionIndex + chunkSize);
        }
        console.log("Uploading " + attachmentBody.length + " chars of " + fileSize);    
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.uploadAttachment}',
            attachmentId, attachmentBody, fileName,
            function(result, event){
                console.log(result);
                if(event.type === 'exception') {
                    console.log("exception");
                    console.log(event);
                    var returnObj = {
                        result: result,
                        event: event
                    }
                    callback(null, returnObj);
                    return returnObj;      
                } else if(event.status) {
                    if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
                            var returnObj = {
                                result: result,
                                event: event
                            }
                            callback(null, returnObj);
                            return returnObj;      
                        } else {
                            positionIndex += chunkSize;
                            sfdcService.uploadAttachment(fileText, fileName, positionIndex, result, callback)
                        }
                    }
                } else {
                    console.log(event.message);
                }          
            }, 
            {buffer: true, escape: true, timeout: 120000}
        );            
    }        
    
    sfdcService.uploadAttachmentToObject = function(fileText, fileName, positionIndex, attachmentId, objectId, callback) {
        
        var maxStringSize = 6000000;    //Maximum String size is 6,000,000 characters
        var maxFileSize = 4350000;      //After Base64 Encoding, this is the max file size
        var chunkSize = 950000;         //Maximum Javascript Remoting message size is 1,000,000 characters
        var fileSize = fileText.length;
        var chunck = null;
        var attachmentBody = null;
        var doneUploading = false;
        
        if(fileSize <= positionIndex + chunkSize) {
            attachmentBody = fileText.substring(positionIndex);
            doneUploading = true;
        } else {
            attachmentBody = fileText.substring(positionIndex, positionIndex + chunkSize);
        }
        console.log("Uploading " + attachmentBody.length + " chars of " + fileSize);    
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.uploadAttachmentToObject}',
            attachmentId, attachmentBody, fileName,objectId,
            function(result, event){
                console.log(result);
                if(event.type === 'exception') {
                    console.log("exception");
                    console.log(event);
                    var returnObj = {
                        result: result,
                        event: event
                    }
                    callback(null, returnObj);
                    return returnObj;      
                } else if(event.status) {
                    if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
                            var returnObj = {
                                result: result,
                                event: event
                            }
                            callback(null, returnObj);
                            return returnObj;      
                        } else {
                            positionIndex += chunkSize;
                            sfdcService.uploadAttachmentToObject(fileText, fileName, positionIndex, result, objectId, callback)
                        }
                    }
                } else {
                    console.log(event.message);
                }          
            }, 
            {buffer: true, escape: true, timeout: 120000}
        );            
    }            
    
      
    
    
    sfdcService.addContactAttachment = function(contactId, fileText, fileName, positionIndex, attachmentId, callback) {
        
        var maxStringSize = 6000000;    //Maximum String size is 6,000,000 characters
        var maxFileSize = 4350000;      //After Base64 Encoding, this is the max file size
        var chunkSize = 950000;         //Maximum Javascript Remoting message size is 1,000,000 characters
        var fileSize = fileText.length;
        var chunck = null;
        var attachmentBody = null;
        var doneUploading = false;
        
        if(fileSize <= positionIndex + chunkSize) {
            attachmentBody = fileText.substring(positionIndex);
            doneUploading = true;
        } else {
            attachmentBody = fileText.substring(positionIndex, positionIndex + chunkSize);
        }
        console.log("Uploading " + attachmentBody.length + " chars of " + fileSize);    
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.addContactAttachment}',
            contactId, attachmentId, attachmentBody, fileName,
            function(result, event){
                console.log(result);
                if(event.type === 'exception') {
                    console.log("exception");
                    console.log(event);
                    var returnObj = {
                        result: result,
                        event: event
                    }
                    callback(null, returnObj);
                    return returnObj;      
                } else if(event.status) {
                    if(result.substring(0,3) == '00P') {
                        if(doneUploading == true) {
                            var returnObj = {
                                result: result,
                                event: event
                            }
                            callback(null, returnObj);
                            return returnObj;      
                        } else {
                            positionIndex += chunkSize;
                            sfdcService.addContactAttachment(contactId, fileText, fileName, positionIndex, result, callback)
                        }
                    }
                } else {
                    console.log(event.message);
                }          
            }, 
            {buffer: true, escape: true, timeout: 120000}
        );            
    }    
    
      
    
    sfdcService.restoreAMPFee = function(oppId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.restoreAMPFee}',
            oppId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.getStudyTopics = function(exam, yearName, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getStudyTopics}',
            exam,yearName,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.setCVSubmission = function(progReqId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setCVSubmission}',
            progReqId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.setNoTwoyears = function(progReqId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setNoTwoyears}',
            progReqId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getProductsById = function(productIds, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getProductsById}',
            productIds,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.setLastLoginDate = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setLastLoginDate}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }


    sfdcService.blockSessionUser = function(token, email, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.blockSessionUser}',
            token, email,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }



    sfdcService.getFormSessionToken = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getFormSessionToken}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    
    sfdcService.verifyAuth = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.verifyAuth}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.getSwitchDetails = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getSwitchDetails}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.changeExamSite = function(examAttemptId, newExamSiteId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.changeExamSite}',
            examAttemptId, newExamSiteId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getChangeExamSites = function(examAttemptId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getChangeExamSites}',
            examAttemptId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getExamRegistration = function(examAttemptId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getExamRegistration}',
            examAttemptId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.requestNewExamSite = function(examSiteCountry, newExamSite, garpId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.requestNewExamSite}',
            examSiteCountry, newExamSite, garpId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.VoidRecurring = function(oppId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.VoidRecurring}',
            oppId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.createoppRecurring = function(strProductCode, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createoppRecurring}',
            strProductCode,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.RecurringFuture = function(oppId, cardMonth, cardYear, paymentType, cardType, cardSecurity, cardNumber, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.RecurringFuture}',
            oppId, cardMonth, cardYear, paymentType, cardType, cardSecurity, cardNumber,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.Charge = function(oppId, cardMonth, cardYear, paymentType, cardType, cardSecurity, cardNumber, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.Charge}',
            oppId, cardMonth, cardYear, paymentType, cardType, cardSecurity, cardNumber,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getContentRegistrations = function(productCodes, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getContentRegistrations}',
            productCodes,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.fetchEventDetails = function(eventId, callback) {
        
        console.log(eventId, callback)
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchEventDetails}', 
            eventId, 
            function(result, event){  
                
                console.log({ result: result, event: event })
                
                callback(null, { result: result, event: event });     
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getChapterMeetingDetail = function(meetingId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getChapterMeetingDetail}',
            meetingId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
  
    sfdcService.getUserContactDetails = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getUserContactDetails}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.unsubscribe = function(contactId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.unsubscribe}',
            contactId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.deleteOrder = function(oppId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.deleteOrder}',
            oppId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.removeOrder = function(oppId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.removeOrder}',
            oppId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.deleteOrder = function(oppId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.deleteOrder}',
            oppId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.logFailedAuthorization= function(examRegId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.ExamManagementRemoter.logFailedAuthorization}',
            examRegId,
            function(result, event){
                callback(null, { result: result, event: event });               
            }, 
            {escape: true}
        );            
    }


    sfdcService.clearIDContactInfo = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.clearIDContactInfo}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    
    sfdcService.setContactInfo = function(tempAccount, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setContactInfo}',
            tempAccount,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getContactInfo = function(contactId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getContactInfo}',
            contactId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: false}
        );            
    }
    
    
    sfdcService.createOrderForPortalUsers = function(obj, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createOrderForPortalUsers}',
            obj,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.createOrder = function(obj, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createOrder}',
            obj,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    sfdcService.rsvpInviteOnlyDecline = function(eventId, userEmail, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.rsvpInviteOnlyDecline}',
            eventId, userEmail,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.createInviteOnlyEventRegistration = function(obj, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createInviteOnlyEventRegistration}',
            obj,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    sfdcService.createContributorEventRegistration = function(obj, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createContributorEventRegistration}',
            obj,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    
    
   sfdcService.createWebcastRegistration = function(obj, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createWebcastRegistration}',
            obj,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
   
   sfdcService.createWebcastRegistrationFromCalendar = function(webcastId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createWebcastRegistrationFromCalendar}',
            webcastId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.setLead = function(email, firstName, lastName, leadSource, cta, callback) {   
        if(cta == undefined) {
          cta = null;
        } 
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setLead}',
            email, firstName, lastName, leadSource, cta,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.CheckExistingMember = function(email, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.CheckExistingMember}',
            email,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getTestDate = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getTestDate}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.getRegistrationDate = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getRegistrationDate}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getActiveSites = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getActiveSites}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    sfdcService.getExamProductsTeams = function(strExamName, email, teamCode, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getExamProductsTeams}',
            strExamName, email, teamCode,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    
    sfdcService.getExamProducts = function(strExamName, email, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getExamProducts}',
            strExamName, email,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.logError = function(errorObject, msg, file, method, page, userAgent, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.logError}',
            errorObject, msg, file, method, page, userAgent,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.encodeString = function(before,callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.encodeString}',
            before,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.autoRenewOff = function(bAutoOff,callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.autoRenewOff}',
            bAutoOff,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.autoRenew = function(bIsCurrentDay, strProductCode, amp, riskNet, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.autoRenew}',
            bIsCurrentDay, strProductCode, amp, riskNet,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getBoardCandidates = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getBoardCandidates}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.voteBoardCandidates = function(contactId, electionId,callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.voteBoardCandidates}',
            contactId, electionId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.confirmDiscountCode = function(promocode, eventId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.confirmDiscountCode}',
            promocode,eventId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getUPSPrice = function(strAddress1,strAddress2,strCity,strCountry,strStateCode,strZip,products,callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getUPSPrice}',
            strAddress1,strAddress2,strCity,strCountry,strStateCode,strZip,products,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.updateId = function(idName,idType,idNumber,callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.updateId}',
            idName,idType,idNumber,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.renewContractcheck = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.renewContractcheck}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.createcontractextension = function(strProductCode, amp, includeRiskNet, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createcontractextension}',
            strProductCode, amp, includeRiskNet,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.sendDirectoryMessage = function(templateName, text, recptContactId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.sendDirectoryMessage}',
            templateName, text,
            recptContactId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.searchDirectory = function(searchText, searchType, industries, jobFunctions, corporateTitles, company, sortField, sortOrder, pageSize, pageCurrent, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.searchDirectory}',
            searchText,
            searchType, industries, jobFunctions, corporateTitles, company,
            sortField, sortOrder,
            pageSize, pageCurrent,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
   
    sfdcService.getDirectorySearchResults = function(FRMOnly, ERPOnly, SCROnly, searchText, industries, jobFunctions, riskSpecialties, corporateTitles, company, sortField, sortOrder, pageSize, pageCurrent, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getDirectorySearchResults}',
            FRMOnly, ERPOnly, SCROnly,
            searchText,
            industries, jobFunctions, riskSpecialties, corporateTitles, company,
            sortField, sortOrder,
            pageSize, pageCurrent,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getBoardOfTrusteesElectionCandidates = function(contactId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getBoardOfTrusteesElectionCandidates}',
            contactId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.voteForBoardElectionCandidates = function(IdsOfVotedCandidates, voter, boardYear, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.voteForBoardElectionCandidates}',
            IdsOfVotedCandidates, voter, boardYear,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.createOtherexams = function(lstProdCodeWithAmount, tempAccount, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.createOtherexams}',
            lstProdCodeWithAmount, tempAccount,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.getOtherexamcodes = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getOtherexamcodes}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getUnDefferedExams = function(examAttemptId, prodCode, glCode, bWire, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getUnDefferedExams}',
            examAttemptId,prodCode,glCode, bWire,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getProduct = function(prodCode, glCode, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getProduct}',
            prodCode,glCode,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.deferExams = function(examAttemptId, prodCode, glCode, bWire, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.deferExams}',
            examAttemptId, prodCode,glCode, bWire,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getProductCodes = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getProductCodes}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getDefferedExams = function(callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getDefferedExams}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
   
    
    
  
    sfdcService.confirmExamAttestation = function(examAttemptId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.confirmExamAttestation}',
            examAttemptId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.confirmExamResultsViewed = function(examAttemptId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.confirmExamResultsViewed}',
            examAttemptId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
sfdcService.attestCPE = function(contractReqId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.attestCPE}',
            contractReqId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.toggelAttendance = function(chapterMeetingId, registrationId ,callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.toggelAttendance}',
            chapterMeetingId, registrationId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.fetchChapterMeetingRegister = function(chapterMeetingId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchChapterMeetingRegister}',
            chapterMeetingId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.chapterMeetingRegister = function(objData, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.chapterMeetingRegister}',
            objData,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.publicChapterMeetingRegister = function(objData, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.publicChapterMeetingRegister}',
            objData,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.setChapterMeetingConfirm = function(registrationId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setChapterMeetingConfirm}',
            registrationId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getChapterMeetingRegistrations = function(callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getChapterMeetingRegistrations}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.signDirectorCode = function(chapterId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.signDirectorCode}',
            chapterId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.payPendingOpportunity = function(oppId, contactId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.payPendingOpportunity}',
            oppId, contactId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.buyProductsByCode = function(products, opportunityName, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.buyProductsByCode}',
            products,opportunityName,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.buyProducts = function(products, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.buyProducts}',
            products,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getStudyProducts = function(mode, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getStudyProducts}',
            mode,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getFRMStudyProducts = function(callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getFRMStudyProducts}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getERPStudyProducts = function(callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getERPStudyProducts}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getFolderDocs = function(name, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getFolderDocs}',
            name,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.getCPEActivities = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getCPEActivities}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.submitCreditContent = function(activityTypeId, cpeCandidateRequirementId, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.submitCreditContent}',
            activityTypeId,cpeCandidateRequirementId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    
    
    sfdcService.getContentDocs = function(folderName, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getContentDocs}',
            folderName,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.requestNewChapter = function(name, type, loction, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.requestNewChapter}',
            name, type, loction,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.requestChapterDirector = function(chapterMemberId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.requestChapterDirector}',
            chapterMemberId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.changeCycle = function(contractId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.changeCycle}',
            contractId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    
    sfdcService.setChapters = function(chap1, chap2, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setChapters}',  
            chap1,
            chap2,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.fetchAcademicInstitutions = function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchAcademicInstitutions}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.fetchCompanies = function(callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchCompanies}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    sfdcService.fetchUserDataById = function(contactInputID, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchUserDataById }',
            contactInputID,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );        
    }
    
    sfdcService.fetchUserData = function(callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchUserData }',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );        
    }
    
    sfdcService.deletePanel = function(objectType, recordId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.deleteFormData}',
            objectType,
            recordId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );        
    }
    
    sfdcService.savePanel = function(objectType, recordId, fields, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.saveFormData}',
            objectType,
            recordId,
            fields,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );        
    }
    
    
    sfdcService.fetchPanel = function(objectType, recordId, fields, parentField, parentId, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchFormData}',
            objectType,
            recordId,
            fields, parentField, parentId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: false}
        );        
    }
    
    sfdcService.fetchPanelList = function(objectType, parentField, parentId, fields, callback) {
        
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.fetchFormList}',
            objectType,
            parentField,
            parentId,
            fields,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );        
    }
    
    sfdcService.setLeadFromMarketingEmail = function(email, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.setLeadFromMarketingEmail}',
            email, 
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }
    
    
    sfdcService.getOffers= function(callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.getOffers}',
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }


    sfdcService.getFaqsByCategory = function(category, callback) {    
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.sfdcAppRemoter.getFaqsByCategory}',
             category, 
             function(result, event){
                 var returnObj = {
                     result: result,
                     event: event
                 }
                 callback(null, returnObj);
                 return returnObj;                
             }, 
             {escape: true}
         );          
    }
    
    sfdcService.getAllSponsorInfoForEventId = function(eventId, callback) {    
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.EventSponsorData.getAllSponsorInfoForEventId}',
             eventId, 
             function(result, event){
                 var returnObj = {
                     result: result,
                     event: event
                 }
                 callback(null, returnObj);
                 return returnObj;                
             }, 
             {escape: true}
         );          
    } 
    
    sfdcService.fetchContactPicklistValues = function(callback) {    
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.ConventionController.fetchContactPicklistValues}',
             function(result, event){
                 callback(null, { result: result, event: event });              
             }, 
             {escape: true}
         );          
    }
    
    sfdcService.createOppFreeERP = function(contactId, callback) {    
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.sfdcAppRemoter.createOppFreeERP}',
             contactId,
             function(result, event){
                 callback(null, { result: result, event: event });              
             }, 
             {escape: true}
         );          
    }
    
    sfdcService.saveBOTComplianceDataSet = function(contactId, vote, callback) {    
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.saveBOTComplianceDataSet}',
            contactId, vote,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }

    sfdcService.getBOTComplianceDataSet = function(contactId, callback) {    
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.sfdcAppRemoter.getBOTComplianceDataSet}',
              contactId,
             function(result, event){
                 callback(null, { result: result, event: event });              
             }, 
             {escape: true}
         );          
    }
    
    sfdcService.updateOSTAIDInfo = function(contactId, idType, idNumber, expDate, callback) {    
         expDate = new Date(expDate).toUTCString();
         Visualforce.remoting.Manager.invokeAction(
             '{!$RemoteAction.ExamManagementRemoter.updateOSTAIDInfo}',
              contactId, idType, idNumber, expDate,
             function(result, event){
                 callback(null, { result: result, event: event });              
             }, 
             {escape: true}
         );          
    }

    sfdcService.submitProfileData = function(experiences, tempAcc, contactId, progReqId, callback) {
        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.sfdcAppRemoter.submitProfileData}',
            experiences, tempAcc, contactId, progReqId,
            function(result, event){
                var returnObj = {
                    result: result,
                    event: event
                }
                callback(null, returnObj);
                return returnObj;                
            }, 
            {escape: true}
        );            
    }    </script>
</apex:page>